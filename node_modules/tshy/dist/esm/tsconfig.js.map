{"version":3,"file":"tsconfig.js","sourceRoot":"","sources":["../../src/tsconfig.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from 'chalk'\nimport { mkdirpSync } from 'mkdirp'\nimport {\n  existsSync,\n  readdirSync,\n  unlinkSync,\n  writeFileSync,\n} from 'node:fs'\nimport { resolve } from 'node:path'\nimport { join } from 'node:path/posix'\nimport * as console from './console.js'\n\n// the commonjs build needs to exclude anything that will be polyfilled\nimport config from './config.js'\nimport polyfills from './polyfills.js'\n\nconst {\n  dialects = ['esm', 'commonjs'],\n  esmDialects = [],\n  commonjsDialects = [],\n} = config\n\nconst recommended: Record<string, any> = {\n  compilerOptions: {\n    declaration: true,\n    declarationMap: true,\n    esModuleInterop: true,\n    forceConsistentCasingInFileNames: true,\n    inlineSources: true,\n    jsx: 'react',\n    module: 'nodenext',\n    moduleResolution: 'nodenext',\n    noUncheckedIndexedAccess: true,\n    resolveJsonModule: true,\n    skipLibCheck: true,\n    sourceMap: true,\n    strict: true,\n    target: 'es2022',\n  },\n}\n\nconst build: Record<string, any> = {\n  extends: '../tsconfig.json',\n  compilerOptions: {\n    rootDir: '../src',\n    target: 'es2022',\n    module: 'nodenext',\n    moduleResolution: 'nodenext',\n  },\n}\n\nconst commonjs = (dialect: string): Record<string, any> => {\n  const exclude = ['../src/**/*.mts']\n  for (const [d, pf] of polyfills) {\n    if (d === dialect) continue\n    for (const f of pf.map.keys()) {\n      exclude.push(`../${join(f)}`)\n    }\n  }\n  return {\n    extends: './build.json',\n    include: ['../src/**/*.ts', '../src/**/*.cts', '../src/**/*.tsx'],\n    exclude,\n    compilerOptions: {\n      outDir:\n        '../.tshy-build-tmp/' +\n        (dialect === 'cjs' ? 'commonjs' : dialect),\n    },\n  }\n}\n\nconst esm = (dialect: string): Record<string, any> => {\n  const exclude: string[] = []\n  for (const [d, pf] of polyfills) {\n    if (d === dialect) continue\n    for (const f of pf.map.keys()) {\n      exclude.push(`../${f}`)\n    }\n  }\n  return {\n    extends: './build.json',\n    include: ['../src/**/*.ts', '../src/**/*.mts', '../src/**/*.tsx'],\n    exclude,\n    compilerOptions: {\n      outDir: '../.tshy-build-tmp/' + dialect,\n    },\n  }\n}\n\nmkdirpSync('.tshy')\nconst writeConfig = (name: string, data: Record<string, any>) =>\n  writeFileSync(\n    `.tshy/${name}.json`,\n    JSON.stringify(data, null, 2) + '\\n'\n  )\n\nconsole.debug(chalk.cyan.dim('writing tsconfig files...'))\nif (!existsSync('tsconfig.json')) {\n  console.debug('using recommended tsconfig.json')\n  writeConfig('../tsconfig', recommended)\n} else {\n  console.debug('using existing tsconfig.json')\n}\nfor (const f of readdirSync('.tshy')) {\n  unlinkSync(resolve('.tshy', f))\n}\nwriteConfig('build', build)\nif (dialects.includes('commonjs')) {\n  writeConfig('commonjs', commonjs('cjs'))\n  for (const d of commonjsDialects) {\n    writeConfig(d, commonjs(d))\n  }\n}\nif (dialects.includes('esm')) {\n  writeConfig('esm', esm('esm'))\n  for (const d of esmDialects) {\n    writeConfig(d, esm(d))\n  }\n}\n"]}